{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Loading from \"../components/loading\";\nimport Error from \"../components/error\";\nimport Articles from \"../components/articles\";\nvar baseRSSUrl = \"https://api.rss2json.com/v1/api.json?rss_url=\";\nvar feedUrl = \"https://www.essentiallysports.com/feed/\";\n\nvar Home = function Home() {\n  // if (isLoading) {\n  //   return <Loading />;\n  // } else if (isError) {\n  //   return <Error />;\n  // } else if (feed) {\n  //   console.log(\"feed 3: \" + data.feed);\n  //   return (\n  //     <div className=\"text-sans\">\n  //       <Head>\n  //         <title>Home</title>\n  //         <link rel=\"icon\" href=\"/favicon.ico\" />\n  //       </Head>\n  //       <Nav feed={feed} />\n  //       <div className=\"w-full text-gray-900\">\n  //         <h1 className=\"m-0 w-full pt-20 leading-tight text-5xl text-center font-bold\">\n  //           Latest News &rarr;\n  //         </h1>\n  //         {/* Articles */}\n  //         <div className=\"max-w-4xl mx-auto pt-20 py-auto pb-8 flex flex-row justify-around\">\n  //           \n  //           <a\n  //             href=\"https://nextjs.org/learn\"\n  //             className=\"pt-4 px-5 pb-6 w-64 text-left no-underline text-gray-800 border border-gray-400 hover:border-blue-500\"\n  //           >\n  //             <h3 className=\"m-0 text-blue-500 text-lg font-bold\">\n  //               Next.js Learn &rarr;\n  //             </h3>\n  //             <p className=\"m-0 pt-3 py-0 pb-0 text-sm text-gray-900\">\n  //               Learn about Next.js by following an interactive tutorial!\n  //             </p>\n  //           </a>\n  //           <a\n  //             href=\"https://github.com/zeit/next.js/tree/master/examples\"\n  //             className=\"pt-4 px-5 pb-6 w-64 text-left no-underline text-gray-800 border border-gray-400 hover:border-blue-500\"\n  //           >\n  //             <h3 className=\"m-0 text-blue-500 text-lg font-bold\">\n  //               Examples &rarr;\n  //             </h3>\n  //             <p className=\"m-0 pt-3 py-0 pb-0 text-sm text-gray-900\">\n  //               Find other example boilerplates on the Next.js GitHub.\n  //             </p>\n  //           </a>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // } else {\n  //   return null;\n  // }\n  var _useState = useState(true),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(),\n      feed = _useState2[0],\n      setFeed = _useState2[1];\n\n  var _useState3 = useState([]),\n      articles = _useState3[0],\n      setArticles = _useState3[1];\n\n  var _useState4 = useState(false),\n      isError = _useState4[0],\n      setError = _useState4[1];\n\n  useEffect(function () {\n    function fetchArticles() {\n      return _fetchArticles.apply(this, arguments);\n    }\n\n    function _fetchArticles() {\n      _fetchArticles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                url = baseRSSUrl + feedUrl;\n                _context.next = 4;\n                return fetch(url);\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context.sent;\n                setLoading(false);\n                setFeed(data.feed);\n                setArticles(data.items);\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                setLoading(false);\n                setError(true);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 13]]);\n      }));\n      return _fetchArticles.apply(this, arguments);\n    }\n\n    fetchArticles();\n  }, []);\n\n  if (isLoading) {\n    return __jsx(Loading, null);\n  } else if (isError) {\n    return __jsx(Error, null);\n  } else if (feed != null) {\n    return __jsx(Articles, {\n      feed: feed,\n      articles: articles\n    });\n  } else {\n    return null;\n  }\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}